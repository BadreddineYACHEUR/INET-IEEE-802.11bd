[General]
network = FilteringShowcase

*.AP1.wlan[*].mgmt.ssid = "AP1"
*.host3.wlan[*].agent.default_ssid = "AP1"

*.AP2.wlan[*].mgmt.ssid = "AP2"
*.host{4..5}.wlan[*].agent.default_ssid = "AP2"

*.AP3.wlan[*].mgmt.ssid = "AP3"
*.host{7..9}.wlan[*].agent.default_ssid = "AP3"

*.*.wlan[*].radio.transmitter.power = 2mW

*.host2.numPingApps = 2
*.host2.pingApp[0].destAddr = "host8"

*.host1.numPingApps = 1
*.host1.pingApp[0].destAddr = "host6"

*.host4.numPingApps = 1
*.host4.pingApp[0].destAddr = "host6"

*.host5.numPingApps = 1
*.host5.pingApp[0].destAddr = "host9"

*.host7.numPingApps = 1
*.host7.pingApp[0].destAddr = "host4"

*.host8.numPingApps = 1
*.host8.pingApp[0].destAddr = "host1"

*.host9.numPingApps = 1
*.host9.pingApp[0].destAddr = "host7"

*.host2.pingApp[1].destAddr = "host3"

*.host*.pingApp[*].startTime = 0.7s

*.visualizer.*.ieee80211Visualizer.displayAssociations = true

**.arpType = "GlobalARP"




# host2 -> host8 udp
# host1 -> host6 udp
# host4 -> host6 udp

# host5 -> host9 tcp
# host7 -> host4 udp -> not needed

# host8 -> host1 tcp -> should be host4

# host9 -> host7 tcp

# host2 -> host3

# and should be ping because it is two way

#*.host2.numUdpApps = 1
#*.host2.udpApp[0].typename = "UDPBasicApp"
#*.host2.udpApp[0].destAddresses = "host8"
#*.host2.udpApp[0].destPort = 1000
#*.host2.udpApp[0].messageLength = 1000Byte
#*.host2.udpApp[0].sendInterval = 10ms
#*.host2.udpApp[0].startTime = 1s
#
#*.host8.numUdpApps = 1
#*.host8.udpApp[0].typename = "UDPSink"
#*.host8.udpApp[0].localPort = 1000
#
#*.visualizer.*.dataLinkVisualizer.displayLinks = true
#
#*.host9.numTcpApps = 1
#*.host9.tcpApp[0].typename = "TCPSessionApp"
#*.host9.tcpApp[0].localAddress = "10.0.0.42"
#*.host9.tcpApp[0].localPort = 1001
#*.host9.tcpApp[0].connectAddress = "10.0.0.43"
#*.host9.tcpApp[0].connectPort = 1001
#*.host9.tcpApp[0].sendBytes = 100KiB
#
#*.host7.numTcpApps = 1
#*.host7.tcpApp[0].typename = "TCPSinkApp"
#*.host7.tcpApp[0].localAddress = "10.0.0.43"
#*.host7.tcpApp[0].localPort = 1001

[Config unfiltered]
description = "so far the pings are visualized on the data link level"

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer.interfaceFilter = "not(lo*)"
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "not(AP*)"

*.visualizer.*.transportRouteVisualizer.displayRoutes = true

*.visualizer.*.dataLinkVisualizer.displayLinks = true

*.visualizer.*.dataLinkVisualizer.lineColor = "darkblue"

*.visualizer.*.dataLinkVisualizer.packetFilter = "*ping*"

*.visualizer.*.dataLinkVisualizer.fadeOutTime = 2s

[Config nodeandpacket]

*.visualizer.*.mediumVisualizer.displayTransmissions = true
*.visualizer.*.mediumVisualizer.displayReceptions = true
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.nodeFilter = "host7"
*.visualizer.*.mediumVisualizer.packetFilter = "*ping*"

*.visualizer.*.dataLinkVisualizer.displayLinks = true

[Config filtering]

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "componentType(*StandardHost*)"

[Config filtering2]

*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.dataLinkVisualizer.packetFilter = "byteLength(120)" # doesnt seem to work

*.visualizer.*.physicalLinkVisualizer.displayLinks = true
*.visualizer.*.physicalLinkVisualizer.packetFilter = "byteLength({100..})"

*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.packetFilter = "byteLength({100..})" # not working