[General]
image-path=../../images
output-scalar-file-append = false
sim-time-limit=20s
network = lte.simulations.networks.SingleCell
**.routingRecorder.enabled = false
**.vector-recording = false

################ Mobility parameters #####################
# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

############### Number of Resource Blocks ################
**.numRbDl = 6
**.numRbUl = 6
**.binder.numBands = 6 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 40


[Config VoIP]
# one UDP application for each user
*.ue[*].numUdpApps = 1
# the number of UDP applications on server should be equal to (numUEs)*(ue[*].numUdpApps) 
*.server.numUdpApps = 1

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# positioning and mobility
*.ue[*].mobility.acceleration = 0
*.ue[*].mobility.angle = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.initialX = uniform(0m,300m)
*.ue[*].mobility.initialY = uniform(0m,300m)
*.ue[*].mobility.initialZ = 0
*.ue[*].mobility.speed = 1mps
*.ue[*].mobilityType = "LinearMobility"

#============= Application Setup =============
*.ue[*].udpApp[*].typename = "VoIPReceiver"
*.ue[*].udpApp[0].localPort = 3000

*.server.udpApp[*].PacketSize = 40
*.server.udpApp[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of udp Apps
*.server.udpApp[*].destPort = 3000
*.server.udpApp[*].localPort = 3088+ancestorIndex(0) 
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].startTime = uniform(0s,0.02s)
#------------------------------------#


#------------------------------------#
# This configurations tests three types of well-known schedulers, namely DRR, 
# MAXCI and PF, in a scenario with VoIP like traffic. 
# The load of the system is varied by means of packet size and amount of UEs
[Config SchedulersTest]
############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}-${iterationvars}-${repetition}.vec
seed-set = ${repetition}

extends = VoIP
sim-time-limit = 10s
repeat = 1

*.eNB.mobility.initFromDisplayString = false
*.eNB.mobility.initialX = 0m
*.eNB.mobility.initialY = 0m

*.ue[*].mobility.initialX = uniform(0m,800m)
*.ue[*].mobility.initialY = uniform(0m,800m)

**.schedulingDisciplineDl = ${sched="PF","MAXCI"}

**.numUe = ${numUEs=50,100,150}
*.server.udpApp[*].PacketSize = ${pktSize=30,40,50,60}

*.server.numUdpApps = ${numUEs}
#------------------------------------#
